{"version":3,"file":"static/js/453.38aead3e.chunk.js","mappings":"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","sources":["constants/constants.js","services/api.js","hooks/useApi.jsx","components/Header.jsx","config/sidebar.config.js","components/ComposeMail.jsx","components/SideBarContent.jsx","components/SideBar.jsx","pages/Home.jsx","services/api.urls.js"],"sourcesContent":["\r\nexport const mainLogo = 'https://logodownload.org/wp-content/uploads/2018/03/gmail-logo-1-1.png';\r\nexport const emptyInbox = 'https://miro.medium.com/max/1088/1*DhOnyEHovQZ31rH00-VUDw.png';\r\nexport const emptyProfilePic = 'https://ssl.gstatic.com/ui/v1/icons/mail/profile_mask2.png';\r\n\r\nexport const EMPTY_TABS = {\r\n    inbox: {\r\n        heading: 'Your inbox is empty',\r\n        subHeading: \"Mails that don't appear in other tabs will be shown here.\"\r\n    },\r\n    drafts: {\r\n        heading: \"You don't have any saved drafts.\",\r\n        subHeading: \"Saving a draft allows you to keep a message you aren't ready to send yet.\"\r\n    },\r\n    starred: {\r\n        heading: 'No starred messages',\r\n        subHeading: \"Stars let you give messages a special status to make them easier to find. To star a message, click on the star outline beside any message or conversation.\"\r\n    },\r\n    sent: {\r\n        heading: 'No sent messages!',\r\n        subHeading: 'Send one now!'\r\n    },\r\n    bin: {\r\n        heading: 'No conversations in Bin.',\r\n        subHeading: ''\r\n    },\r\n}","\r\nimport axios from 'axios';\r\n\r\n// axios can be used in different ways for eg :\r\n// 1 : normal/instant method : axios.get() or axios.post() or axios.delete() etc. depending upon the api calling \r\n// 2 : interceptors : axios.interceptors.use() \r\n// 3 : axios api : axios is used as function and an object is passed which has all the information \r\n// eg : axios({ method: 'post',}) etc.\r\n\r\nconst API_URI = ''; // backend is running on this port, in production we remove the port mentioned\r\n\r\n// since we want it to be called automatically so we put this in middleware(middleware is call after every route(here after every api call))\r\nconst API_GMAIL = async (urlObject, payload, type) => {   \r\n    return await axios({    // axios is an asynchronous function so async-await\r\n        method: urlObject.method,\r\n        url:`${API_URI}/${urlObject.endpoint}/${type}`,\r\n        data: payload // when its post api so we get payload which is data here, it remains empty in get\r\n    });\r\n}\r\n\r\nexport default API_GMAIL;","// we can make custom hooks in react \"use\" is important as all the hooks starts with use(usestate/useeffect etc)\r\n\r\nimport { useState } from \"react\";\r\nimport API_GMAIL from \"../services/api\";\r\n\r\nconst useApi = (urlObject) => {\r\n    const [response, setResponse] = useState(null);\r\n    const [error, setError] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false); // the loading sign to show that its loading\r\n\r\n    const call = async (payload, type = \"\") => {  // payload is taken from sentEmail function and type from getEmailsFromType\r\n        setResponse(null); // when new function/api is called it should as new (if not changed then last stored state will be shown)\r\n        setError(\"\"); // similar as setResponse\r\n        setIsLoading(true); // as the function is called, loading starts\r\n\r\n        try {\r\n            let res = await API_GMAIL(urlObject, payload, type);\r\n            setResponse(res.data);  // if api call successful, will give the data \r\n        } catch (error) {\r\n            setError(error.message); // if not successful show the error\r\n        } finally {\r\n            setIsLoading(false); // irrespective of the result, loding state will end\r\n        }\r\n    }\r\n    return { call, response, error, isLoading}; // incase we dont return anything here then getEmailServices will have undefined value(error)-{just for information}\r\n};\r\n\r\nexport default useApi;","import React from 'react';\r\nimport Appbar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport MenuIcon from '@mui/icons-material/Menu'; // icons are imported as components so use use it with self closing tags\r\nimport styled from '@emotion/styled'; // change the color or any css property\r\nimport { mainLogo } from '../constants/constants';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport TuneIcon from '@mui/icons-material/Tune';\r\nimport InputBase from '@mui/material/InputBase'; // or import { InputBase } from '@mui/material';\r\nimport { Box } from '@mui/material'; // Box in @mui is basically a div itself\r\nimport HelpOutlineOutlinedIcon from '@mui/icons-material/HelpOutlineOutlined';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport AppsIcon from '@mui/icons-material/Apps';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\n\r\n\r\nconst StyledAppBar = styled(Appbar) ({ // Appbar is now stored in StyledAppBar so Appbar is replaced with StyledAppbar\r\n    background: \"#f6f8fc\",\r\n    boxShadow: \"none\",\r\n    cursor: 'pointer'\r\n});\r\n\r\nconst SearchBox = styled(Box) ({\r\n    background: \"#eaf1fb\",\r\n    marginLeft: 80,\r\n    borderRadius: 25,\r\n    minWidth: 720,\r\n    maxWidth: 750,\r\n    height: 52,\r\n    display: 'flex', \r\n    alignItems: 'center', // here to get the componets in one line(horizontally align)\r\n    justifyContent: 'space-between',\r\n    padding: '0 20px',\r\n    '& > div': {  // to get the input field at start as it was inn the middle bz of justifyContent(here div is the parent for input base)\r\n        width: '100%',\r\n        padding: '0 10px',\r\n    }\r\n});\r\n\r\nconst OptionBox = styled(Box) ({\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    '& > svg': {   // as all the icons are stored/saved in svg form so svg becomes the parents and all the icons its child\r\n        marginLeft: 20\r\n    }\r\n});\r\n\r\n// we make use of appbar and toolbar from material UI to get the blue header \r\n// as the position of header is fixed the other elements might get hideen behind it so we make it static\r\nconst Header = ({ toggleDrawer }) => { // object destructuring (to get desire value/output)\r\n  return (\r\n    <StyledAppBar position='static'>\r\n        <Toolbar>\r\n            <MenuIcon color='action' onClick={toggleDrawer} /> {/* we put color='action' to darken the menu color */}\r\n            <img src={mainLogo} alt=\"Logo\" style={{width: 100, marginLeft: 15}}/>\r\n            <SearchBox>\r\n                <SearchIcon color='action' />\r\n                <InputBase placeholder='Search mail'/>\r\n                <TuneIcon color='action' />\r\n            </SearchBox>\r\n            <OptionBox>\r\n                <HelpOutlineOutlinedIcon color='action'/>\r\n                <SettingsIcon color='action'/>\r\n                <AppsIcon color='action'/>\r\n                <AccountCircleIcon color='action'/>\r\n            </OptionBox>\r\n        </Toolbar>\r\n    </StyledAppBar>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import InboxIcon from '@mui/icons-material/Inbox';\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\nimport SendOutlinedIcon from '@mui/icons-material/SendOutlined';\r\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport MarkAsUnreadOutlinedIcon from '@mui/icons-material/MarkAsUnreadOutlined';\r\n\r\n\r\nconst SIDEBAR_DATA = [\r\n    {\r\n        name: 'inbox',\r\n        title: 'Inbox',\r\n        icon: InboxIcon\r\n    },\r\n    {\r\n        name: 'starred',\r\n        title: 'Starred',\r\n        icon: StarBorderIcon\r\n    },\r\n    {\r\n        name: 'sent',\r\n        title: 'Sent',\r\n        icon: SendOutlinedIcon\r\n    },\r\n    {\r\n        name: 'drafts',\r\n        title: 'Drafts',\r\n        icon: InsertDriveFileOutlinedIcon\r\n    },\r\n    {\r\n        name: 'bin',\r\n        title: 'Bin',\r\n        icon: DeleteOutlineIcon\r\n    },\r\n    {\r\n        name: 'all mails',\r\n        title: 'All mails',\r\n        icon: MarkAsUnreadOutlinedIcon\r\n    },\r\n]\r\n\r\nexport default SIDEBAR_DATA;\r\n\r\n","\r\nimport React, { useState } from 'react';\r\nimport Dialog from '@mui/material/Dialog'; // is the popup for compose mail\r\nimport { Box } from '@mui/material';\r\nimport Typography from '@mui/material/Typography'; // typography by default gives <p> tag \r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport styled from '@emotion/styled';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\r\n// e = basically is the value/details present in the function\r\nimport useApi from '../hooks/useApi';\r\nimport { API_URLS } from '../services/api.urls';\r\n\r\nconst dialogStyle = {\r\n    height: \"90%\",\r\n    width: \"80%\",\r\n    maxWidth: \"100%\",  // as maxwidth/height is predefined so we have to change accordingly\r\n    maxHeight: \"100%\",\r\n    boxShadow: \"none\",\r\n    borderRadius: \" 10px 10px 0 0\"\r\n\r\n};\r\n\r\nconst Header = styled(Box) ({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px 15px',\r\n    background: '#f2f6fc',\r\n    fontFamily: 'Google Sans, Roboto, RobotoDraft, Helvetica, Arial, sans-serif',\r\n    '& > p': {\r\n        fontSize: 14,\r\n        fontWeight: 500\r\n    },\r\n    cursor: 'pointer'\r\n});\r\n\r\nconst SubjectWrapper = styled(Box)({ // (SubjectWrapper) make sure fisrt letter is capital(***)\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '15px',\r\n    '& > div': {\r\n        fontSize: 14,\r\n        borderBottom: '1px solid #F5F5F5',\r\n        marginTop: '10px'\r\n    },\r\n    cursor: 'pointer'\r\n});\r\n\r\nconst Footer = styled(Box) ({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px 15px',\r\n    alignItems: 'center',\r\n    cursor: 'pointer'\r\n});\r\n\r\nconst SentButton = styled(Button) ({\r\n    background: '#0B57D0',\r\n    color: '#fff',\r\n    fontWeight: 500,\r\n    textTransform: 'none',\r\n    borderRadius: 18,\r\n    width: 100\r\n});\r\n\r\nconst ComposeMail = ({openDialog, setOpenDialog}) => { // object destructuring method to receive an element as a prop\r\n    const [data, setData] = useState({});\r\n    const sentEmailServices = useApi(API_URLS.saveSentEmail); // to initialise our hook(to save it in database), we need to mention the endpoint so we make an object of all the information\r\n    const saveDraftServices = useApi(API_URLS.saveDraftEmail); // to save the draft message\r\n\r\n    const config = {\r\n        Host : \"smtp.elasticemail.com\",\r\n        Username : \"roshnisingh2111@yopmail.com\", // as the code is visible can people can access the information so we make use of .env file\r\n        Password : \"958F28E00F3D69C8901544A22D88D12E0F80\",\r\n        Port: '2525',\r\n    };\r\n\r\n    const closeCompose = (e) => { // on close button click a function is passed \r\n        e.preventDefault(); // as it should go to backend so now just an event is passed prevent\r\n\r\n        const payload = {  // is the data when type: sent\r\n            to: data.to,\r\n            from: 'aasthasingh552@gmail.com',\r\n            subject: data.subject,\r\n            body: data.body,\r\n            date: new Date(),\r\n            image: '',\r\n            name: 'Aastha Singh',\r\n            starred: false,\r\n            type: 'drafts'\r\n        };\r\n\r\n        saveDraftServices.call(payload); // saveDraftServices is received from useApi which has a call function and payload is passed in that\r\n\r\n        if(!saveDraftServices.error) { // if no error then run this\r\n            setOpenDialog(false); // close the dialog \r\n            setData({});    // setData to empty for new mail to compose\r\n        } else {\r\n\r\n        }\r\n\r\n        setOpenDialog(false); // as it becomes false so it closes the page\r\n    }\r\n\r\n    const sendMail = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(window.Email) { // email gets attach to your window, so you have to make sure you have a window whith this\r\n            window.Email.send({ \r\n                ...config, // using config using spread operator\r\n                To : data.to,\r\n                From : \"aasthasingh552@gmail.com\",\r\n                Subject : data.subject,  // is the names given in data\r\n                Body : data.body,\r\n            }).then(\r\n                message => alert(message)\r\n            );\r\n        };\r\n\r\n        const payload = {  // is the data when type: sent\r\n            to: data.to,\r\n            from: 'aasthasingh552@gmail.com',\r\n            subject: data.subject,\r\n            body: data.body,\r\n            date: new Date(),\r\n            image: '',\r\n            name: 'Aastha Singh',\r\n            starred: false,\r\n            type: 'sent'\r\n        };\r\n\r\n        sentEmailServices.call(payload); // sentEmailServices is received from useApi which has a call function and payload is passed in that\r\n\r\n        if(!sentEmailServices.error) { // if no error then run this\r\n            setOpenDialog(false); // close the dialog \r\n            setData({});    // setData to empty for new mail to compose\r\n        } else {\r\n\r\n        }\r\n\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    const onValueChange = (e) => {\r\n        setData({...data, [e.target.name]: e.target.value}); // is stored in the setData, data is used here and its information is get by e.target.name = becomes the key and is a variable so it has to be wrapped in a []\r\n    }\r\n\r\n  return (\r\n        <Dialog\r\n            open={openDialog} // dialog have its own props just like sidebar // openDialog is triggered here\r\n            PaperProps={{sx: dialogStyle}}  // paperprops handle all the css\r\n        >\r\n            <Header>\r\n                <Typography>New Message</Typography>\r\n                <CloseIcon fontSize='small' onClick={(e) => {closeCompose(e)}}/> {/* when clicked on the icon closeCompose function is passed/triggered */}\r\n            </Header>\r\n\r\n            <SubjectWrapper>\r\n                <InputBase placeholder='To' name='to' onChange={(e) => {onValueChange(e)}}/> {/* when something is chenged(typed) onValueChnage function is called, as same function is triggered by to,subject,body so to differentiate between then name is applied */}\r\n                <InputBase placeholder='Subject' name='subject' onChange={(e) => {onValueChange(e)}}/> {/* when something is chenged(typed) onValueChnage function is called */}\r\n            </SubjectWrapper>\r\n\r\n            <TextField\r\n                multiline // is a textfield prop which signifies can use multiple lines\r\n                rows={20} // rows= defines max number of rows in the textfield\r\n                sx={{'& .MuiOutlinedInput-notchedOutline': {border: 'none'}}} // allows to shape/remove etc the border(get it by inspecting on the web page)\r\n                onChange={(e) => {onValueChange(e)}} name='body'  // when something is chenged(typed) onValueChnage function is called \r\n            >\r\n            </TextField>\r\n\r\n            <Footer>\r\n                <SentButton onClick={(e) => {sendMail(e)}} variant=\"contained\" color='action'>Send</SentButton>\r\n                <DeleteOutlinedIcon onClick={() => {setOpenDialog(false)}} />\r\n            </Footer>\r\n            \r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default ComposeMail;\r\n","\r\nimport React, { useState } from 'react';\r\nimport { Box } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport CreateOutlinedIcon from '@mui/icons-material/CreateOutlined';\r\nimport styled from '@emotion/styled';\r\nimport SIDEBAR_DATA from '../config/sidebar.config';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ComposeMail from './ComposeMail';\r\n// To get the url to select the components : 1 : params(/..) , 2 : query(?...)\r\nimport { useParams, NavLink } from 'react-router-dom'; // navlink is used to link components with particular route\r\nimport routes from '../routes/routes';\r\n\r\nconst ComposeButton = styled(Button) ({\r\n    background: '#c2e7ff',\r\n    color: '#001d35',\r\n    padding: 16,\r\n    marginLeft: 10,\r\n    marginTop: 10,\r\n    borderRadius: 16,\r\n    minWidth: 140,\r\n    textTransform: 'none',\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n});\r\n\r\nconst Container = styled(Box) ({\r\n    padding: 8,\r\n    '& > ul': {\r\n        padding: '10px 0 0 5px',\r\n        fontSize: 14,\r\n        fontWeight: 500,\r\n        cursor: 'pointer',\r\n        '& > a': {  // navlink gives anchor tag which disrupts the styling so we choose, container > ul(list) > a(navlink)\r\n            textDecoration: 'none', // underline is removed\r\n            color: 'inherit', // take/inherit the color from parent\r\n        }\r\n    },\r\n    '& > ul > a > li > svg': {\r\n        marginRight: 30\r\n    }\r\n});\r\n\r\nconst SideBarContent = () => {\r\n    const [openDialog, setOpenDialog] = useState(false); // initially its not visible/hidden\r\n\r\n    const { type } = useParams(); // type: is the name given in the url\r\n\r\n    const onComposeClick = () => {\r\n        setOpenDialog(true); // when compose button is clicked a function is passed which allows the Dialog to open/true\r\n    }\r\n\r\n  return (\r\n    <Container>\r\n        <ComposeButton variant=\"contained\" color='action' onClick={() => {onComposeClick()}}>\r\n            <CreateOutlinedIcon />Compose\r\n        </ComposeButton>\r\n        <List> {/* we show all the elements here in form of lists and @mui has lists(list and listitem which basically gives ul and li) */}\r\n            {\r\n                SIDEBAR_DATA.map(data => ( // sidebar data is in the form of all so we make use of mapping(while using mapping we need to provide an unique key to each components)\r\n                    <NavLink key={data.name} to={`${routes.emails.path}/${data.name}`}> {/* navlink is used to navigate listitems to routes, works just like navigate(here is navigated to all the routes and if matched with the key) */}\r\n                        <ListItem style={type === data.name.toLowerCase() ? { //we match the type(url) with the data.name(name is used as key here) in the list if they match then change the style, if not then keep it empty {}\r\n                            backgroundColor: '#d3e3fd',\r\n                            borderRadius: '0 16px 16px 0',\r\n                        } : {} }> \r\n                            <data.icon fontSize='small' /> {data.title} {/* we select(map) the and show with their title from the array, icon is shown as a component so with self closing tags, fontsize runs as a prop and used to increase/decrease the size*/}\r\n                        </ListItem> \r\n                    </NavLink>\r\n                ))\r\n            }\r\n        </List>\r\n\r\n        <ComposeMail openDialog={openDialog} setOpenDialog={setOpenDialog} /> {/* openDialog is passed as a prop */}\r\n        \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SideBarContent;\r\n","\r\nimport React from 'react';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport SideBarContent from './SideBarContent';\r\n\r\nconst SideBar = ({ openDrawer }) => {\r\n  return (\r\n    <Drawer \r\n      anchor='left' // determines the way/position\r\n      open={openDrawer}   // triggers openDrawer in the home.jsx\r\n      hideBackdrop={true} // so that background me everything dosen't become pale/light\r\n      ModalProps={{\r\n        keepMounted: true\r\n      }}\r\n      variant='persistent'  // makes the sidebar and main page look like on the same page(it looks same page just divided with a line)\r\n      sx={{ // to start the it from your chice(muipaper defined in the html page is done using effects(sx))\r\n        '& .MuiDrawer-paper': { // MuiDrawer-paper : is the name given by html page(styles)\r\n          marginTop: '64px',\r\n          width: 250,\r\n          background: '#f6f8fc',\r\n          borderRight: 'none',\r\n          height: 'calc(100vh - 64px)'\r\n        }\r\n      }}\r\n    >\r\n      < SideBarContent />\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default SideBar;","import React, { Suspense, useState } from 'react';\r\nimport Header from '../components/Header';\r\nimport SideBar from '../components/SideBar';\r\n// import Email from '../components/Email';\r\nimport { Outlet } from 'react-router-dom';\r\nimport SuspenseLoader from '../components/SuspenseLoader';\r\nimport { Box } from '@mui/material';\r\n\r\n\r\nconst Home = () => {\r\n  const [openDrawer, setOpenDrawer] = useState(true) // to toggle the sidebar (here bz home is the parent for both header and sidebar component)\r\n\r\n  const toggleDrawer = () => {\r\n    setOpenDrawer(prevState => !prevState); // when tapped on menuicon if its open then close it, if closed open it(if true it will become false and if false it will become true)\r\n  }\r\n  \r\n  return (\r\n    <> \r\n      < Header toggleDrawer={toggleDrawer}/> {/* toggleDrawer is passed inside header as a prop bz the icon(Menuicon) is in the header */}\r\n      <Box>\r\n        < SideBar openDrawer={ openDrawer } />\r\n        {/*< Email openDrawer={openDrawer} /> we pass opendrawer to slide/change the position of the email page */}\r\n        {/* As Email and ViewEmail page has to be shown on the same area(basically pages has to be switched accordingly) */}\r\n        <Suspense fallback={<SuspenseLoader />}>\r\n          <Outlet context={{ openDrawer }}/>  {/* outlet renders the child(/type or /view) components from the parents(/emails) and since those components are imported with lazy so we make use of suspense*/}\r\n        </Suspense>\r\n      </Box>\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n","\r\nexport const API_URLS = {  // is the information/what the api will contain\r\n    saveSentEmail: {\r\n        endpoint: 'save',\r\n        method: 'POST'\r\n    },\r\n    getEmailFromType: {\r\n        endpoint: 'emails',\r\n        method: 'GET'\r\n    },\r\n    saveDraftEmail: {\r\n        endpoint: 'save-draft',\r\n        method: 'POST'\r\n    },\r\n    moveEmailToBin: {\r\n        endpoint: 'bin',\r\n        method: 'POST'\r\n    },\r\n    taggleStarredEmail: {\r\n        endpoint: 'starred',\r\n        method: 'POST'\r\n    },\r\n    deleteEmail: {\r\n        endpoint: 'delete',\r\n        method: 'DELETE'\r\n    }\r\n}"],"names":["mainLogo","emptyProfilePic","EMPTY_TABS","inbox","heading","subHeading","drafts","starred","sent","bin","async","urlObject","payload","type","axios","method","url","concat","endpoint","data","response","setResponse","useState","error","setError","isLoading","setIsLoading","call","arguments","length","undefined","res","API_GMAIL","message","StyledAppBar","styled","Appbar","background","boxShadow","cursor","SearchBox","Box","marginLeft","borderRadius","minWidth","maxWidth","height","display","alignItems","justifyContent","padding","width","OptionBox","_ref","toggleDrawer","_jsx","position","children","_jsxs","Toolbar","MenuIcon","color","onClick","src","alt","style","SearchIcon","InputBase","placeholder","TuneIcon","HelpOutlineOutlinedIcon","SettingsIcon","AppsIcon","AccountCircleIcon","name","title","icon","InboxIcon","StarBorderIcon","SendOutlinedIcon","InsertDriveFileOutlinedIcon","DeleteOutlineIcon","MarkAsUnreadOutlinedIcon","dialogStyle","maxHeight","Header","fontFamily","fontSize","fontWeight","SubjectWrapper","flexDirection","borderBottom","marginTop","Footer","SentButton","Button","textTransform","openDialog","setOpenDialog","setData","sentEmailServices","useApi","API_URLS","saveSentEmail","saveDraftServices","saveDraftEmail","config","Host","Username","Password","Port","onValueChange","e","target","value","Dialog","open","PaperProps","sx","Typography","CloseIcon","preventDefault","to","from","subject","body","date","Date","image","closeCompose","onChange","TextField","multiline","rows","border","window","Email","send","To","From","Subject","Body","then","alert","sendMail","variant","DeleteOutlinedIcon","ComposeButton","Container","textDecoration","marginRight","SideBarContent","useParams","CreateOutlinedIcon","List","SIDEBAR_DATA","map","NavLink","routes","emails","path","ListItem","toLowerCase","backgroundColor","ComposeMail","openDrawer","Drawer","anchor","hideBackdrop","ModalProps","keepMounted","borderRight","Home","setOpenDrawer","_Fragment","prevState","SideBar","Suspense","fallback","SuspenseLoader","Outlet","context","getEmailFromType","moveEmailToBin","taggleStarredEmail","deleteEmail"],"sourceRoot":""}